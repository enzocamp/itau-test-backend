version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: itau-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: My654123
      MYSQL_DATABASE: itau_investments
    volumes:
      - ./schema_itau_investments_en.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-pMy654123"]
      interval: 10s
      timeout: 5s
      retries: 5
      
  worker:
    build:
      context: .
      dockerfile: Itau.Investimentos/Itau.Investimentos.Worker/Dockerfile
    container_name: itau-worker
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - default

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: itau-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: itau-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 10

  api:
    build:
      context: .
      dockerfile: Itau.Investimentos/Itau.Investimentos.API/Dockerfile
    container_name: itau-api
    depends_on:
      - mysql
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - default

networks:
  default:
